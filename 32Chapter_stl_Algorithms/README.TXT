Algorithms, both standard-library algorithms and the users' own ones, are important: 
	-Each names a specific operation, documents an interface, and specifies sematics. 
	-Each can be widely used and known by many programmers. 

For correctness, maintainablilty, and performance, these can be immense advantages compared to "random code" with less well-specified functions and dependencies. 
If you find yourself writing a piece of code with several loops, local variables that don't seem to relate to each other, or complicated control structures, consider if the code could be simplified by making a part into a function/algorithm with a descriptive name, a well-defined purpose, a well-defined interface, and well-defined dependencies. 
	
